name: Nethermind/Ethereum tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      coverage:
        default: false
        description: Collect coverage
        required: false
        type: boolean

env:
  COLLECT_COVERAGE: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event.inputs.coverage }}
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  RETENTION: 1
  TERM: xterm

jobs:
  nethermind-tests:
    name: Run ${{ matrix.project }}
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      collect_coverage: ${{ env.COLLECT_COVERAGE }}
    strategy:
      matrix:
        project:
          - Nethermind.Runner.Test
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        ref: release/1.28.0
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
    - name: Cache dotnet packages
      id: cache-dotnet
      uses: actions/cache/restore@v4
      with:
        path: ~/.nuget/packages/
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}
    - name: ${{ matrix.project }}
      id: test
      run: |
        while dotnet test src/Nethermind/${{ matrix.project }} -c release; do
          echo "Test passed. Running again..."
          sleep 1  # optional
        done
        echo "Test failed. Exiting loop."
    - name: Save test outcome
      if: success() || failure()
      run: echo "${{ steps.test.outcome == 'success' }}," >> nethermind.outcome
    - name: Upload test outcome
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}-outcome
        path: nethermind.outcome
        retention-days: ${{ env.RETENTION }}
    - name: Upload coverage report
      if: env.COLLECT_COVERAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}-coverage
        path: src/Nethermind/${{ matrix.project }}/TestResults/**/coverage.cobertura.xml
        retention-days: ${{ env.RETENTION }}

  nethermind-tests-status:
    name: Nethermind tests
    needs: nethermind-tests
    runs-on: ubuntu-latest
    steps:
    - name: Download test outcomes
      uses: actions/download-artifact@v4
    - name: Ensure tests passed
      run: |
        data=$(cat **/nethermind.outcome) && data=${data%?}
        passed=$(echo "[$data]" | jq -r 'all')
        [ $passed = 'true' ] && exit 0 || exit 1

