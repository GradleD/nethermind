name: 'Hive consensus tests' 

on:
  workflow_run:
    workflows: ["Publish Docker image"]
    branches: ["release/*"]
    types:
      - completed  
  workflow_dispatch:
    inputs:
      parallelism:
        description: 'Number of concurrently running tests in each job.'
        required: true
        default: '8'
        type: choice
        options: ['1', '2', '3', '4', '8', '16']

jobs:
  

  
          
  run_hive_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up parameters
        run: |
          echo "PARALLELISM=${{ github.event.inputs.parallelism || '8' }}" >> $GITHUB_ENV

      - name: Check out Nethermind repository
        uses: actions/checkout@v4
        with:
          path: nethermind
          
      - name: Install Linux packages
        run: |
          sudo apt-get update
          sudo apt-get install libsnappy-dev libc6-dev libc6 build-essential

      - name: Set up Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: '>=1.17.0'

      - name: Check out Hive repository
        uses: actions/checkout@v4
        with:
          repository: ethereum/hive
          ref: master
          path: hive

      - name: Patch Hive Dockerfile
        run: |
          tag="kch-hiveConsensusVerify"
          sed -i -e "s|^ARG baseimage=.*|ARG baseimage=nethermindeth/nethermind|" -e "s|^ARG tag=.*|ARG tag=$tag|" hive/clients/nethermind/Dockerfile
          cat hive/clients/nethermind/Dockerfile

      - name: Build Hive
        working-directory: hive
        run: go build .

      - name: Run hive for tests - ${{ join(matrix.hiveTests.testNames, ', ') }}
        continue-on-error: true
        working-directory: hive
        run: |
          #IFS=',' read -ra TEST_NAMES <<< "${{ join(matrix.hiveTests.testNames, ',') }}"
          #for testName in "${TEST_NAMES[@]}"
          #do
            ./hive --client nethermind --docker.pull --sim.loglevel 5 --sim ethereum/consensus --sim.limit /TransitionTests/bcArrowGlacierToMerge/powToPosTest --sim.parallelism $PARALLELISM
          #done
      - name: Print results
        run: |
          chmod +x nethermind/scripts/hive-results.sh
          nethermind/scripts/hive-results.sh "hive/workspace/logs/*.json"
      - name: Send results to dashboard
        continue-on-error: true
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HIVE_HOST }}
          username: ${{ secrets.HIVE_USERNAME }}
          key: ${{ secrets.HIVE_KEY }}
          port: ${{ secrets.HIVE_PORT }}
          source: hive/workspace/logs/*
          target: ${{ secrets.HIVE_DIR }}/
