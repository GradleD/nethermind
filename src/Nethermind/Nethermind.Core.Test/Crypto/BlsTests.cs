// SPDX-FileCopyrightText: 2023 Demerzel Solutions Limited
// SPDX-License-Identifier: LGPL-3.0-only

using System;
using FluentAssertions;
using Nethermind.Core.Crypto;
using Nethermind.Core.Test.Builders;
using Nethermind.Crypto;
using NUnit.Framework;

namespace Nethermind.Core.Test.Crypto
{
    [TestFixture]
    public class BlsTests
    {
        [Test]
        public void Can_calculate_Bls_signature()
        {
            byte[] expected = [0x80,0x8c,0xce,0xc5,0x43,0x5a,0x63,0xae,0x01,0xe1,0x0d,0x81,0xbe,0x27,0x07,0xab,0x55,0xcd,0x0d,0xfc,0x23,0x5d,0xfd,0xf9,0xf7,0x0a,0xd3,0x27,0x99,0xe4,0x25,0x10,0xd6,0x7c,0x9f,0x61,0xd9,0x8a,0x65,0x78,0xa9,0x6a,0x76,0xcf,0x6f,0x4c,0x10,0x5d,0x09,0x26,0x2e,0xc1,0xd8,0x6b,0x06,0x51,0x53,0x60,0xb2,0x90,0xe7,0xd5,0x2d,0x34,0x7e,0x48,0x43,0x8d,0xe2,0xea,0x22,0x33,0xf3,0xc7,0x2a,0x0c,0x22,0x21,0xed,0x2d,0xa5,0xe1,0x15,0x36,0x7b,0xca,0x7a,0x27,0x12,0x16,0x50,0x32,0x34,0x0e,0x0b,0x29];
            PrivateKey sk = new("0x7b0b2bab671fabdd9308d85c3d41954cd80bbe6fafc9a66fe1e3adfbdcd10b6f");
            Hash256 message = new("0x3e00ef2f895f40d67f5bb8e81f09a5a12c840ec3ce9a7f3b181be188ef711a1e");
            Bls.Signature s = Bls.Sign(sk, message);
            s.Bytes.Should().Equal(expected);
        }

        [Test]
        public void Can_verify_created_signature()
        {
            Hash256 message = new("0x3e00ef2f895f40d67f5bb8e81f09a5a12c840ec3ce9a7f3b181be188ef711a1e");
            Bls.Signature s = Bls.Sign(TestItem.PrivateKeyA, message);
            Assert.That(Bls.Verify(Bls.GetPublicKey(TestItem.PrivateKeyA), s, message));
        }
    }
}
