// SPDX-FileCopyrightText: 2024 Demerzel Solutions Limited
// SPDX-License-Identifier: LGPL-3.0-only

using Nethermind.Blockchain.Find;
using Nethermind.Core.Extensions;
using Nethermind.Core.Test.Builders;
using Nethermind.Facade.Filters;
using Nethermind.Logging;
using Nethermind.Shutter.Contracts;
using NSubstitute;
using NUnit.Framework;

namespace Nethermind.Shutter.Test.Contract;

[TestFixture]
public class SequencerContractTests
{
    // [TestCase("0x
    [TestCase("0xf0a057cedc9717f5e05fe8844b111647091f02607da901a26bd8e5d580473fc9000000000000000000000000ac0c0b61aee9955d72870c98d8676b71cf0a867000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000005208000000000000000000000000000000000000000000000000000000000000010103a6ebbcc172f6a6bbc7cbca785299a7d7e0ed1892d7f098da3afe409878ad7d32db0a14b7635c15f95c8a9d1e7a744f4a16a65c2783b695d91ceb7a51ba00632fd083a0b100a0c9d9ce8025f7ed3023932a1d91efeed61a7f32f0441028a67fb60d4931cad7ebba57552b62f382e730916efe21cdf92a3a7524042c2ef9c3abf58e8e53a55d1df282b83bdf68fb33baf1264303e5a0f3dedad181868950c8e926e85fe0ce897397dfa5c607fd87b6cac7f1feaaee6a44de1b1e63af1a9a6820b6e7d67e9cc34c428549ad0aede45963d8fe03fec7c31d5041ff23226a928a08c80d8004bd82d4404ea6edab5fda342b35a27f46b44ee5623bb93830fbd93b53d900000000000000000000000000000000000000000000000000000000000000")]
    public void GetEvents(string hex)
    {
        // Arrange
        SequencerContract sequencerContract = new(TestItem.AddressA, Substitute.For<ILogFinder>(), LimboLogs.Instance);

        // Act
        ISequencerContract.TransactionSubmitted parsedTransaction = sequencerContract.ParseTransactionSubmitted(
            new FilterLog(
                0,
                0,
                0,
                TestItem.KeccakA,
                0,
                TestItem.KeccakB,
                TestItem.AddressA,
                Bytes.FromHexString(hex),
                [
                    new("0xa7f1b5467be46c45249fb93063cceef96c63ddad03819246bc7770e32d4f5b7d"),
                    new("0x0000000000000000000000000000000000000000000000000000000000000001"),
                    new("0x0000000000000000000000000000000000000000000000000000000000000025")
                ]));

        // Assert
        Assert.NotNull(parsedTransaction);
    }
}
